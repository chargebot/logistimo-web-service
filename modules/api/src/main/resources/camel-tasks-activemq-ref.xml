<!-- this is a spring XML file where we have Camel embedded -->
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- Here we define Camel, notice the namespace it uses -->
    <camelContext xmlns="http://camel.apache.org/schema/spring">

        <propertyPlaceholder id="properties" location="samaanguru.properties"/>

        <template id="camel-client"></template>

        <!--error handler and redelivery processing-->
        <onException>
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="{{task.queue.max.retry}}" redeliveryDelay="{{task.queue.waittime}}"/>
        </onException>


        <route id="directRoute">
            <from uri="direct:tasks"/>
            <!--<log message="direct route with ${body.params[action]}"/>-->
            <choice>
                <when>
                    <simple>${body.params[action]} == '[be]'</simple>
                    <log message="Routing message to export queue with data ${body}"/>
                    <to uri="activemq:queue:exports"/>
                </when>
                <otherwise>
                    <marshal ref="gson"/>
                    <log message="Routing message to task queue with data ${body}"/>
                    <to uri="activemq:queue:tasks"/>
                </otherwise>
            </choice>
        </route>

        <!-- Camel route to move messages from the task queue -->
        <route id="taskQueueRoute" errorHandlerRef="tskDeadLetterErrorHandler" autoStartup="{{task.server}}">
            <!-- from uri="rabbitmq://172.31.25.38/logistimo?queue=tasks&amp;vhost=%2Flogistimo&amp;connectionFactory=#rabbitmq"/ -->
            <from uri="activemq:queue:tasks?concurrentConsumers={{task.pool.size}}&amp;maxConcurrentConsumers={{task.pool.size}}"/>
            <unmarshal ref="gson"/>
            <log message="Routing message from task queue to task ${body}"/>
            <bean ref="taskExecutor"/>
        </route>

        <!-- Camel route to move messages from the export queue -->
        <route id="exportQueueRoute" errorHandlerRef="expDeadLetterErrorHandler" autoStartup="{{export.route.start}}">
            <from uri="activemq:queue:exports?concurrentConsumers={{export.pool.size}}&amp;maxConcurrentConsumers={{export.pool.size}}"/>
            <!--<unmarshal ref="gson"/>-->
            <log message="Routing message from export queue to task ${body}"/>
            <bean ref="taskExecutor"/>
        </route>

        <route id="assetAlarmsRoute" errorHandlerRef="assetAlarmsErrorHandler" autoStartup="{{task.server}}">
            <from uri="activemq:queue:asset-alarms"/>
            <unmarshal ref="assetStatusRequest"/>
            <log message="Routing message from queue to Logistimo Web ${body}"/>
            <bean ref="assetAlarmsMessagingProcessor"/>
        </route>

    </camelContext>

    <bean id="assetAlarmsMessagingProcessor" class="com.logistimo.assets.utils.AssetAlarmsMessagingProcessor">
    </bean>

    <bean id="assetAlarmsErrorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
        <property name="deadLetterUri" value="activemq:queue:asset-alarms-deadletter"/>
        <property name="redeliveryPolicy" ref="assetAlarmsRedeliveryPolicyConfig"/>
    </bean>

    <bean id="assetAlarmsRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
        <property name="maximumRedeliveries" value="3"/>
        <property name="redeliveryDelay" value="5000"/>
    </bean>

    <bean id="tskDeadLetterErrorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
        <property name="deadLetterUri" value="activemq:queue:taskdead"/>
        <property name="redeliveryPolicy" ref="tskRedeliveryPolicyConfig"/>
    </bean>

    <bean id="tskRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
        <property name="maximumRedeliveries" value="0"/>
        <property name="redeliveryDelay" value="5000"/>
    </bean>


    <bean id="expDeadLetterErrorHandler" class="org.apache.camel.builder.DeadLetterChannelBuilder">
        <property name="deadLetterUri" value="activemq:queue:exportdead"/>
        <property name="redeliveryPolicy" ref="expRedeliveryPolicyConfig"/>
    </bean>

    <bean id="expRedeliveryPolicyConfig" class="org.apache.camel.processor.RedeliveryPolicy">
        <property name="maximumRedeliveries" value="0"/>
        <property name="redeliveryDelay" value="5000"/>
    </bean>

    <bean id="taskExecutor" class="com.logistimo.services.taskqueue.JMSTaskProcessor">

    </bean>
    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <!-- vm://myBroker is the vm protocol, and myBroker is the broker name -->
        <property name="brokerURL"
                  value="failover:(tcp://localhost:61616)?nested.wireFormat.maxInactivityDuration=1000&amp;jms.prefetchPolicy.queuePrefetch=1"/>
    </bean>

    <!-- define the gson data format, where we configure the data format using the properties -->
    <bean id="gson" class="org.apache.camel.component.gson.GsonDataFormat">
        <property name="unmarshalType" value="com.logistimo.services.taskqueue.TaskOptions"/>
    </bean>

    <bean id="assetStatusRequest" class="org.apache.camel.component.gson.GsonDataFormat">
        <property name="unmarshalType" value="com.logistimo.assets.models.AssetStatusRequest"/>
    </bean>
</beans>
